apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  labels:
    pipeline.openshift.io/type: kubernetes
  name: myapp-ci-pipeline
  namespace: myapp-ci
spec:
  resources:
  - name: intermediate-image
    type: image
  - name: runtime-image
    type: image    
  params:
  - name: STORAGE_DRIVER
    type: string
    default: vfs
  - name: source-git-url   
    type: string
  - name: source-git-revision
    type: string
  - name: gitrepository_fullname
    type: string
  - name: commit_prior_revision
    type: string
  - name: commit_date
    type: string
  - name: commit_author
    type: string    
  - name: openshift_app_name
    type: string
  - name: runtime_image_name
    type: string
  - name: runtime_base_image
    type: string 
  - name: myapp-cd-git-url 
    type: string
  - name: my-app-cd-git-repo-name
    type: string
  - name: my-app-cd-git-repo-path-to-content-development
    type: string
  - name: my-app-cd-git-commit-comment
    type: string
  - name: my-app-cd-git-user-name
    type: string
  - name: my-app-cd-git-user-email    
    type: string  
  tasks:
##------------------------------------------------------------------
# Git clone source code task
##------------------------------------------------------------------
  - name: git-clone-source
    params:
    - name: url
      value: $(params.source-git-url)
    - name: revision
      value: $(params.source-git-revision)
    - name: verbose
      value: 'false'
    - name: subdirectory
      value: source
    taskRef:
      kind: ClusterTask
      name:  git-clone
    workspaces:
    - name: output
      workspace: files    
##------------------------------------------------------------------
# Build application
##------------------------------------------------------------------      
  - name: build
    params:
    - name: STORAGE_DRIVER
      value: $(params.STORAGE_DRIVER)
    resources:
      outputs:
      - name: intermediate-image
        resource: intermediate-image
    taskRef:
      kind: Task
      name: build
    runAfter:
    - git-clone-source
    workspaces:
    - name: files
      workspace: files      
##------------------------------------------------------------------
# Create the runtime image from a base container image and
# deployable asset extracted from the builder container image.
##------------------------------------------------------------------
  - name: create-runtime-image
    params:
    - name: STORAGE_DRIVER
      value: $(params.STORAGE_DRIVER)
    - name: gitrepository_url
      value: $(params.source-git-url)
    - name: gitrepository_fullname
      value: $(params.gitrepository_fullname)
    - name: commit_prior_revision
      value: $(params.commit_prior_revision)
    - name: commit_reference_branch
      value: $(params.source-git-revision)
    - name: commit_date
      value: $(params.commit_date)
    - name: commit_author
      value: $(params.commit_author)
    - name: runtime_image_name
      value: $(params.runtime_image_name)
    - name: openshift_app_name
      value: $(params.openshift_app_name)
    - name: runtime_base_image
      value: $(params.runtime_base_image)
    - name: sourceCommitTag
      value: "$(tasks.git-clone-source.results.commit)"
    - name: pipelineRunName
      value: $(context.pipelineRun.name)
    - name: pipelineName
      value: $(context.pipeline.name)        
    resources:
      inputs:
      - name: intermediate-image
        resource: intermediate-image
      outputs:
      - name: runtime-image
        resource: runtime-image
    taskRef:
      kind: Task
      name: create-runtime-image
    runAfter:
    - build
    workspaces:
    - name: files
      workspace: files  
##------------------------------------------------------------------
# Clone the cd repository and update the kustomization file for the
# development environment to refer to the new tagged image.
##------------------------------------------------------------------      
  - name: update-and-commit-kustomization-file
    params: 
    - name: GIT_URL
      value: $(params.myapp-cd-git-url)
    - name: GIT_REPO_NAME
      value: $(params.my-app-cd-git-repo-name)
    - name: GIT_PATH_TO_CONTENT
      value: $(params.my-app-cd-git-repo-path-to-content-development)
    - name: GIT_USER_NAME
      value: $(params.my-app-cd-git-user-name)
    - name: GIT_USER_EMAIL
      value: $(params.my-app-cd-git-user-email)
    - name: GIT_COMMIT_COMMENT
      value: $(params.my-app-cd-git-commit-comment)    
    - name: IMAGE 
      value: $(tasks.create-runtime-image.results.new-image-repo-location)       
    taskRef:
      kind: Task
      name: update-and-commit-kustomization-file   
    runAfter:
    - create-runtime-image      
    workspaces:
    - name: files
      workspace: files      
##------------------------------------------------------------------
# Workspace definition.
##------------------------------------------------------------------         
  workspaces:
  - name: files  