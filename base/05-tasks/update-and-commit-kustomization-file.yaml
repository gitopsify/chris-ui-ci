apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: update-and-commit-kustomization-file
  namespace: myapp-ci
spec:
  params:
  - name: GIT_URL
    type: string
  - name: GIT_REPO_NAME
    type: string
  - name: GIT_BRANCH
    type: string
    default: ""
  - name: GIT_PR_TARGET_BRANCH
    type: string
    default: ""
  - name: GIT_PATH_TO_CONTENT
    type: string    
    default: ""
  - name: GIT_USER_NAME
    type: string
  - name: GIT_USER_EMAIL
    type: string
  - name: GIT_COMMIT_COMMENT
    type: string
  - name: IMAGE
    type: string
  steps:
  - name: update-ops-repo-with-imagetag
    env:
      - name: GITHOSTACCESSTOKEN
        valueFrom:
          secretKeyRef:
            key: "token"
            name: "github-access-token"
    image: quay.io/marrober/kustomize:latest
    script: >
      #!/bin/sh

      echo "Git URL : " $(params.GIT_URL)

      echo "Git Repo name : " $(params.GIT_REPO_NAME)

      echo "Git branch for change : " $(params.GIT_BRANCH)

      echo "Git branch target for pull request : " $(params.GIT_PR_TARGET_BRANCH)

      echo "Path to content in git repo : " $(params.GIT_PATH_TO_CONTENT)

      echo "Username for git changes : " $(params.GIT_USER_NAME)

      echo "Email address for git changes : " $(params.GIT_USER_EMAIL)

      echo "Git commit comment : " $(params.GIT_COMMIT_COMMENT)

      echo "Image URL to be patched : " $(params.IMAGE)

      cd /workspace/files/

      git config --global user.email $(params.GIT_USER_EMAIL)

      git config --global user.name $(params.GIT_USER_NAME)

      git clone https://${GITHOSTACCESSTOKEN}@github.com/$(params.GIT_URL)

      echo "-----------------------------------------------------------------"

      echo "view content of directory"

      echo "-----------------------------------------------------------------"

      cd /workspace/files/$(params.GIT_REPO_NAME)/$(params.GIT_PATH_TO_CONTENT)

      ls -al

      echo "-----------------------------------------------------------------"

      echo "Select branch"

      git checkout $(params.GIT_BRANCH)

      echo "-----------------------------------------------------------------"

      echo "File before change"
      
      echo "-----------------------------------------------------------------"      

      cat kustomization.yaml

      kustomize edit set image $(params.IMAGE)

      echo "-----------------------------------------------------------------"

      echo "File after change"
      
      echo "-----------------------------------------------------------------"      

      cat kustomization.yaml

      cd /workspace/files/$(params.GIT_REPO_NAME)

      git add .    

      git commit -m "$(params.GIT_COMMIT_COMMENT)"    

      echo "-----------------------------------------------------------------"     

      git push -u

      if [ -z "$(params.GIT_PR_TARGET_BRANCH)" ] 
      
      then

        echo "Pull request is not required"

      else

        echo "-----------------------------------------------------------------"

        echo "Create pull request"

        echo "-----------------------------------------------------------------"

        echo $GITHOSTACCESSTOKEN > gh-token.txt

        gh auth login --with-token < gh-token.txt

        gh pr create --fill --head $(params.GIT_BRANCH) --base $(params.GIT_PR_TARGET_BRANCH)
      
      fi

  workspaces:
    - name: files